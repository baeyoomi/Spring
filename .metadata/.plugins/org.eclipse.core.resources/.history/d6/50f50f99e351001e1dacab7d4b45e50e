import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;

public class udp_client {
//UDP - Client 통신
	public static void main(String[] args) {
		client_udp cu = new client_udp();
		cu.cudp();
	}

}

class client_udp {
	private String ip = null;
	private int port = 0;
	private int myport = 0;		
	public DatagramSocket ds = null;	
	public DatagramPacket dp = null;
	public InetAddress ia = null;
	public BufferedReader br = null;
	public String msg = null;
	
	/*
		UDP는 포트가 서버포트 벼로, 자신이 접속하는 포트 별도
		중복 발생시 접속 차단
	*/
	
	public client_udp() {
		this.ip = "192.168.110.217";
		this.port = 7000;
		//this.myport = 7001;	//1:1 통신
		//랜덤을 이용한 다중 접속
		this.myport = (int)Math.ceil(Math.random()*1000)+10000;
	}
	
	public void cudp() {
		try {
			this.ia = InetAddress.getByName(this.ip);		//서버 ip를 가져옴
			//자신의 port에 대한 소켓을 오픈
			this.ds = new DatagramSocket(this.myport);
			System.out.println("아이디를 입력하세요 : ");
			this.br = new BufferedReader(new InputStreamReader(System.in));
			this.msg = this.br.readLine();
			String name = this.msg;
			
			while(true) {
				byte by[] = this.msg.getBytes();
				
				//서버로 해당 메세지를 패킷을 이용해서 전송
				//DatagramPacket(byte배열, 배열크기, 서버ip, 서버포트)
				this.dp = new DatagramPacket(by,by.length,this.ia,this.port);
				this.ds.send(dp);		//서버로 전송
				System.out.println(name +"메세지 전송완료");				

				//서버에서 전송된 값을 받는 역할
				byte[] by2 = new byte[200];
				this.dp = new DatagramPacket(by2,by2.length);
				this.ds.receive(this.dp);
				System.out.println(new String(this.dp.getData()));
			}
			
		}
		catch(Exception e) {
			System.out.println("서버 접속 오류!");
		}
	}
}